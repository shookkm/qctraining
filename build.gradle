/******************************************************************************
 *
 * Filename:     build.gradle
 * Description:
 *
 * (c) COPYRIGHT Queen City Software, Inc. 2015 All Rights Reserved
 * No part of this copyrighted work may be reproduced, modified, or distributed
 * in any form or by any means without the prior written permission of Queen
 * City Software, Inc.
 *
 * $Id: build.gradle 789 2016-01-12 18:06:18Z btf $
 * Notes:
 *
 *****************************************************************************/
//for temporary plugins block limitation
buildscript{
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies{
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.9.5"
    classpath "com.jaredsburrows:gradle-license-plugin:0.8.42"
    classpath "com.qcsoftware.qc-release-plugin:com.qcsoftware.qc-release-plugin.gradle.plugin:1.0.3"
    classpath "gradle.plugin.se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.60"
  }
}
plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.20'
  id "org.jetbrains.kotlin.plugin.spring" version "1.3.20"
  id "com.qcsoftware.qc-toolkit-plugin" version "1.0.1"
  id "eclipse"
  id "java"
}
//for temporary plugins block limitation
apply plugin: "com.jfrog.artifactory"
apply plugin: "com.jaredsburrows.license"
apply plugin: "com.qcsoftware.qc-release-plugin"
apply plugin: "se.bjurr.gitchangelog.git-changelog-gradle-plugin"

def javaVersion =JavaVersion.VERSION_11
def kotlinJavaVersion = JavaVersion.VERSION_1_8

project.ext.sybasejava = System.env.SQLANY17 != null ?
  "${System.env.SQLANY17}${File.separator}java" :
  System.env.SQLANY16 != null ?
    "${System.env.SQLANY16}${File.separator}java" :
    System.env.SQLANY12 != null ?
      "${System.env.SQLANY12}${File.separator}java" :
      "${System.env.ASA}${File.separator}java"
project.ext.sqlanywhere = files("${project.ext.sybasejava}/sajdbc4.jar", "${project.ext.sybasejava}/jodbc4.jar")

repositories {
  maven { url "https://dl.bintray.com/kotlin/ktor" }
  mavenCentral()
  jcenter()
  mavenLocal()
  maven {
    url "$artifactory_contextUrl/$artifactory_resolve_repository"
    credentials {
      username "$artifactory_user"
      password "$artifactory_password"
    }

  }
}

sourceSets {
  main {
    resources {
      srcDir 'Resources'
      srcDir 'System/Config'
      exclude '**/.gitkeep'
    }
  }
  test {
    java {
      srcDir 'Test/Src'
    }
    resources {
      srcDir 'Test/Resources'
      exclude '**/.gitkeep'
    }
  }
}

artifactory {
  contextUrl = "$artifactory_contextUrl"   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    repository {
      repoKey = "$artifactory_resolve_repository"
      maven = true
      username = "$artifactory_user" // The publisher user name
      password = "$artifactory_password" // The publisher password
    }
  }
  resolve {
    repository {
      repoKey = "$artifactory_publish_repository"
      maven = true
      username = "$artifactory_user" // The publisher user name
      password = "$artifactory_password" // The publisher password
    }
  }
}

dependencies {
  runtime project.ext.sqlanywhere
}

eclipse {
  classpath {
    containers 'org.jetbrains.kotlin.core.KOTLIN_CONTAINER'
    defaultOutputDir = file("${buildDir}/build-eclipse")
    downloadSources = true

    /*
     * needed with newer gradle
     */
    file.whenMerged {
      entries.each {
        source ->
          if (source.kind == 'src' && source.toString().contains('output')) {
            source.output = "build/build-eclipse"
          }
      }
    }
  }
}

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = kotlinJavaVersion
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = kotlinJavaVersion
  }
}

java {
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
}

task generateGitChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
  fromRepo = "${projectDir}"
  file = new File("CHANGELOG.md")
  untaggedName = project.version
  ignoreCommitsIfMessageMatches = ".*\\[skip ci\\].*"
}