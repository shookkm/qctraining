/* *****************************************************************************
 * (c) COPYRIGHT Queen City Software, Inc. 2015 All Rights Reserved
 * No part of this copyrighted work may be reproduced, modified, or distributed
 * in any form or by any means without the prior written permission of Queen
 * City Software, Inc.
 *****************************************************************************/

plugins {
  id "com.jfrog.artifactory" version "4.9.8"
  id 'org.jetbrains.kotlin.jvm' version '1.3.41'
  id "org.jetbrains.kotlin.plugin.spring" version "1.3.41"
  id "com.jaredsburrows.license" version "0.8.42"
  id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.63"
  id "com.qcsoftware.qc-release-plugin" version "1.1.3"
  id "eclipse"
  id "java"
}

def javaVersion = JavaVersion.VERSION_11
def kotlinJavaVersion = JavaVersion.VERSION_11

dependencies {
  runtime files("${System.getenv("SQLANY17") ?: System.getenv("SQLANY16")}/java/sajdbc4.jar")
  implementation 'com.qcsoftware:qc-toolkit:14.14.0'
}

repositories {
  maven { url "https://dl.bintray.com/kotlin/ktor" }
  mavenCentral()
  jcenter()
  mavenLocal()
  maven {
    url "$artifactory_contextUrl/$artifactory_resolve_repository"
    credentials {
      username "$artifactory_user"
      password "$artifactory_password"
    }
  }
}

sourceSets {
  main {
    resources {
      srcDir 'Resources'
      srcDir 'System/Config'
      exclude '**/.gitkeep'
    }
    kotlin {
      srcDir 'Src'
      srcDir 'QcUpdates/Src'
      exclude '**/.gitkeep'
    }
    java {
      srcDir 'Src'
      srcDir 'QcUpdates/Src'
      exclude '**/.gitkeep'
    }
  }
  test {
    java {
      srcDir 'Test/Src'
      exclude '**/.gitkeep'
    }
    kotlin {
      srcDir 'Test/Src'
      exclude '**/.gitkeep'
    }
    resources {
      srcDir 'Test/Resources'
      exclude '**/.gitkeep'
    }
  }
}

artifactory {
  contextUrl = "$artifactory_contextUrl"   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    repository {
      repoKey = "$artifactory_resolve_repository"
      maven = true
      username = "$artifactory_user" // The publisher user name
      password = "$artifactory_password" // The publisher password
    }
  }
  resolve {
    repository {
      repoKey = "$artifactory_publish_repository"
      maven = true
      username = "$artifactory_user" // The publisher user name
      password = "$artifactory_password" // The publisher password
    }
  }
}

eclipse {
  classpath {
    defaultOutputDir = file("${buildDir}/build-eclipse")
    downloadSources = true
    file.whenMerged {
      entries.each {
        source ->
          if (source.kind == 'src' && source.toString().contains('output')) {
            source.output = "build/build-eclipse"
          }
      }
    }
  }
}

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = kotlinJavaVersion
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = kotlinJavaVersion
  }
}

java {
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
}

task generateGitChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
  fromRepo = "${projectDir}"
  file = new File("CHANGELOG.md")
  untaggedName = project.version
  ignoreCommitsIfMessageMatches = ".*\\[skip ci\\].*"
}